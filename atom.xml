<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zuo Zhitao&#39;s Blog</title>
  
  <subtitle>Record my life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zuozhitao.github.io/"/>
  <updated>2020-06-01T06:57:24.876Z</updated>
  <id>https://zuozhitao.github.io/</id>
  
  <author>
    <name>Zhitao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vim Commands</title>
    <link href="https://zuozhitao.github.io/2020/06/01/Vim-Command/"/>
    <id>https://zuozhitao.github.io/2020/06/01/Vim-Command/</id>
    <published>2020-06-01T01:13:40.000Z</published>
    <updated>2020-06-01T06:57:24.876Z</updated>
    
    <content type="html"><![CDATA[<p>“<a href="https://www.vim.org" target="_blank" rel="noopener">Vim</a> is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as “vi” with most UNIX systems and with Apple OS X.”</p><p>Vim is a editor to create or edit a text file.<br>There are two modes in vim. One is the command mode and another is the insert mode.<br>In the command mode, user can move around the file, delete text, etc.<br>In the insert mode, user can insert text.</p><a id="more"></a><h2 id="Start-Vim"><a href="#Start-Vim" class="headerlink" title="Start Vim"></a>Start Vim</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim<span class="comment"># Start Vim directly</span></span><br><span class="line">$ vim filename<span class="comment"># Start Vim and open a file named "filename"</span></span><br></pre></td></tr></table></figure><h2 id="Changing-mode-from-one-to-another"><a href="#Changing-mode-from-one-to-another" class="headerlink" title="Changing mode from one to another"></a>Changing mode from one to another</h2><p>From command mode to insert mode type a/A/i/I/o/O (see details below)<br>From insert mode to command mode type Esc (escape key)</p><h2 id="Text-Entry-Commands-Used-to-start-text-entry"><a href="#Text-Entry-Commands-Used-to-start-text-entry" class="headerlink" title="Text Entry Commands (Used to start text entry)"></a>Text Entry Commands (Used to start text entry)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ a<span class="comment"># Append text following current cursor position</span></span><br><span class="line">$ A<span class="comment"># Append text to the end of current line</span></span><br><span class="line">$ i<span class="comment"># Insert text before the current cursor position</span></span><br><span class="line">$ I<span class="comment"># Insert text at the beginning of the cursor line</span></span><br><span class="line">$ o<span class="comment"># Open up a new line following the current line and add text there</span></span><br><span class="line">$ O<span class="comment"># Open up a new line in front of the current line and add text there</span></span><br></pre></td></tr></table></figure><h2 id="Cursor-Movement-Commands"><a href="#Cursor-Movement-Commands" class="headerlink" title="Cursor Movement Commands"></a>Cursor Movement Commands</h2><p>The following commands are used only in the commands mode.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ h<span class="comment"># Moves the cursor one character to the left</span></span><br><span class="line">$ l<span class="comment"># Moves the cursor one character to the right</span></span><br><span class="line">$ k<span class="comment"># Moves the cursor up one line</span></span><br><span class="line">$ j<span class="comment"># Moves the cursor down one line</span></span><br><span class="line">$ nG or :n<span class="comment"># Cursor goes to the specified (n) line, (ex. 10G goes to line 10)</span></span><br><span class="line">$ ^F (CTRl F) <span class="comment"># Forward screenful</span></span><br><span class="line">$ ^B <span class="comment"># Backward screenful</span></span><br><span class="line">$ ^f <span class="comment"># One page forward</span></span><br><span class="line">$ ^b <span class="comment"># One page backward</span></span><br><span class="line">$ ^U <span class="comment"># Up half screenful</span></span><br><span class="line">$ ^D <span class="comment"># Down half screenful</span></span><br><span class="line">$ $ <span class="comment"># Move cursor to the end of current line</span></span><br><span class="line">$ 0 (zero) <span class="comment"># Move cursor to the beginning of current line</span></span><br><span class="line">$ w <span class="comment"># Forward one word</span></span><br><span class="line">$ b <span class="comment"># Backward one word</span></span><br></pre></td></tr></table></figure><h2 id="Exit-Commands"><a href="#Exit-Commands" class="headerlink" title="Exit Commands"></a>Exit Commands</h2><p>The following commands are used only in the commands mode.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ :wq <span class="comment"># Write file to disk and quit the editor</span></span><br><span class="line">$ :q! <span class="comment"># Quit (no warning)</span></span><br><span class="line">$ :q <span class="comment"># Quit (a warning is printed if a modified file has not been saved)</span></span><br><span class="line">$ ZZ <span class="comment"># Save workspace and quit the editor (same as :wq)</span></span><br><span class="line">$ :10,25 w temp<span class="comment"># Write lines 10 through 25 into file named temp. Of course, other line numbers can be used. (Use :f to find out the line numbers you want.</span></span><br></pre></td></tr></table></figure><h2 id="Text-Deletion-Commands"><a href="#Text-Deletion-Commands" class="headerlink" title="Text Deletion Commands"></a>Text Deletion Commands</h2><p>The following commands are used only in the commands mode.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ x  <span class="comment"># Delete character</span></span><br><span class="line">$ dw <span class="comment"># Delete word from cursor on</span></span><br><span class="line">$ db <span class="comment"># Delete word backward</span></span><br><span class="line">$ dd <span class="comment"># Delete line</span></span><br><span class="line">$ d$ <span class="comment"># Delete to end of line</span></span><br><span class="line">$ d^ (d caret) <span class="comment"># Delete to beginning of line</span></span><br></pre></td></tr></table></figure><h2 id="Yank-–-Vim’s-copy-command"><a href="#Yank-–-Vim’s-copy-command" class="headerlink" title="Yank – Vim’s copy command"></a>Yank – Vim’s copy command</h2><p>The following commands are used only in the commands mode.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ yy <span class="comment"># Yank current line</span></span><br><span class="line">$ y$ <span class="comment"># Yank to end of current line from cursor</span></span><br><span class="line">$ yw <span class="comment"># Yank from cursor to end of current word</span></span><br><span class="line">$ 5yy <span class="comment"># Yank, for example, 5 lines</span></span><br></pre></td></tr></table></figure><h2 id="Paste-Used-after-delete-or-yank-to-recover-lines"><a href="#Paste-Used-after-delete-or-yank-to-recover-lines" class="headerlink" title="Paste (Used after delete or yank to recover lines)"></a>Paste (Used after delete or yank to recover lines)</h2><p>The following commands are used only in the commands mode.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ p <span class="comment"># Paste below cursor</span></span><br><span class="line">$ P <span class="comment"># Paste above cursor</span></span><br><span class="line">$ <span class="string">"2p # Paste from buffer 2 (there are 9)</span></span><br><span class="line"><span class="string">$ u # Undo last change</span></span><br><span class="line"><span class="string">$ U # Restore line</span></span><br><span class="line"><span class="string">$ J # Join next line down to the end of the current line</span></span><br></pre></td></tr></table></figure><h2 id="File-Manipulation-Commands"><a href="#File-Manipulation-Commands" class="headerlink" title="File Manipulation Commands"></a>File Manipulation Commands</h2><p>The following commands are used only in the commands mode.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ :w <span class="comment"># Write workspace to original file</span></span><br><span class="line">$ :w file <span class="comment"># Write workspace to named file</span></span><br><span class="line">$ :e file<span class="comment"># Start editing a new file</span></span><br><span class="line">$ :r file <span class="comment"># Read contents of a file to the workspace</span></span><br></pre></td></tr></table></figure><h2 id="Other-Useful-Commands"><a href="#Other-Useful-Commands" class="headerlink" title="Other Useful Commands"></a>Other Useful Commands</h2><p>Most commands can be repeated n times by typing a number, n, before the command. For example 10dd means delete 10 lines.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ . <span class="comment"># Repeat last command</span></span><br><span class="line">$ cw <span class="comment"># Change current word to a new word</span></span><br><span class="line">$ r <span class="comment"># Replace one character at the cursor position</span></span><br><span class="line">$ R <span class="comment"># Begin overstrike or replace mode � use ESC key to exit</span></span><br><span class="line">$ :/ pattern <span class="comment"># Search forward for the pattern</span></span><br><span class="line">$ :? pattern <span class="comment"># Search backward for the pattern</span></span><br><span class="line">$ n <span class="comment"># (used after either of the 2 search commands above to continue to find next occurrence of the pattern.</span></span><br><span class="line">$ :g/pat1/s//pat2/g <span class="comment"># Replace every occurrence of pattern1 (pat1) with pat2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“&lt;a href=&quot;https://www.vim.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vim&lt;/a&gt; is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as “vi” with most UNIX systems and with Apple OS X.”&lt;/p&gt;
&lt;p&gt;Vim is a editor to create or edit a text file.&lt;br&gt;There are two modes in vim. One is the command mode and another is the insert mode.&lt;br&gt;In the command mode, user can move around the file, delete text, etc.&lt;br&gt;In the insert mode, user can insert text.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Vim" scheme="https://zuozhitao.github.io/tags/Vim/"/>
    
  </entry>
  
</feed>
